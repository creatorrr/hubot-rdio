// Generated by CoffeeScript 1.4.0
(function() {
  var compile, helpers, name, page, pages;

  compile = require('coffeecup').compile;

  helpers = {
    layout: function(partial) {
      doctype(5);
      return html(function() {
        head(function() {
          script({
            src: '/socket.io/socket.io.js'
          });
          script({
            src: '//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js'
          });
          return script({
            src: '/jquery.rdio.js'
          });
        });
        return body(function() {
          return partial();
        });
      });
    }
  };

  pages = {
    home: function() {
      var _this = this;
      return layout(function() {
        h1(_this.title);
        div('#gaga', function() {
          return '';
        });
        return coffeescript(function() {
          return $(function() {
            var socket;
            socket = io.connect();
            return socket.on('gaga', function(data) {
              return console.log(data);
            });
          });
        });
      });
    },
    error: function() {
      var _this = this;
      return layout(function() {
        return p(_this.message);
      });
    },
    redirect: function() {
      var _this = this;
      return layout(function() {
        h3(_this.message);
        input({
          type: 'hidden',
          id: 'redirect',
          value: _this.redirect
        });
        return coffeescript(function() {
          var redirect;
          redirect = function() {
            var url;
            url = $('#redirect').val();
            return window.location.href = url;
          };
          return setTimeout(redirect, 3000);
        });
      });
    },
    player: function() {
      var _this = this;
      return layout(function() {
        div('#rdio', function() {
          return this.playbackToken;
        });
        input({
          type: 'hidden',
          id: 'playbackToken',
          value: _this.playbackToken
        });
        return coffeescript(function() {
          var playbackToken;
          playbackToken = $('#playbackToken').val();
          $('#rdio').rdio(playbackToken);
          return $('#rdio').on('rdio.ready', function(e, user) {
            return console.log(user);
          });
        });
      });
    }
  };

  for (name in pages) {
    page = pages[name];
    module.exports[name] = compile(page, {
      hardcode: helpers
    });
  }

}).call(this);
