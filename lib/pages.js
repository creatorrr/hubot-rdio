// Generated by CoffeeScript 1.4.0
(function() {
  var compile, helpers, name, page, pages;

  compile = require('coffeecup').compile;

  helpers = {
    layout: function(partial) {
      doctype(5);
      return html(function() {
        head(function() {
          script({
            src: '/socket.io/socket.io.js'
          });
          script({
            src: '//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js'
          });
          return script({
            src: '//ajax.googleapis.com/ajax/libs/swfobject/2.2/swfobject.js'
          });
        });
        return body(function() {
          return partial();
        });
      });
    }
  };

  pages = {
    home: function() {
      var _this = this;
      return layout(function() {
        h1(_this.title);
        div('#gaga', function() {
          return '';
        });
        return coffeescript(function() {
          return $(function() {
            var socket;
            socket = io.connect();
            return socket.on('gaga', function(data) {
              return console.log(data);
            });
          });
        });
      });
    },
    error: function() {
      var _this = this;
      return layout(function() {
        return p(_this.message);
      });
    },
    redirect: function() {
      var _this = this;
      return layout(function() {
        h3(_this.message);
        input({
          type: 'hidden',
          id: 'redirect',
          value: _this.redirect
        });
        return coffeescript(function() {
          var redirect;
          redirect = function() {
            var url;
            url = $('#redirect').val();
            return window.location.href = url;
          };
          return setTimeout(redirect, 3000);
        });
      });
    },
    player: function() {
      var _this = this;
      return layout(function() {
        h1('Rdio Playback API simple example');
        div('#apiswf', function() {
          return '';
        });
        input('#play_key', {
          value: 'a997982'
        });
        button('#play', function() {
          return 'Play';
        });
        button('#stop', function() {
          return 'stop';
        });
        button('#pause', function() {
          return 'pause';
        });
        button('#previous', function() {
          return 'previous';
        });
        button('#next', function() {
          return 'next';
        });
        input({
          type: 'hidden',
          id: 'playback_token',
          value: _this.playbackToken
        });
        coffeescript(function() {
          window.playback_token = $('#playback_token').val();
          return window.domain = window.location.hostname;
        });
        return script({
          src: 'https://raw.github.com/rdio/hello-web-playback/master/hello.js'
        });
      });
    }
  };

  for (name in pages) {
    page = pages[name];
    module.exports[name] = compile(page, {
      hardcode: helpers
    });
  }

}).call(this);
